name: turtlemove # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Test for custom turtlebot3 move on ros2 # 79 char long summary
description: |
  This is my-snap's description.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

parts:

  ros2-galactic-extension:
    build-packages: [ros-galactic-ros-core] # Installing the core meta-package
    override-build: install -D -m 0755 launch ${SNAPCRAFT_PART_INSTALL}/snap/command-chain/ros2-launch # Install the ros2-launch script responsible of sourcing your ROS environment
    plugin: nil # Plugin for parts with no source to import
    source: $SNAPCRAFT_EXTENSIONS_DIR/ros2 # Get the ros2-launch script from snapcraft itself
    
    
  ros-demos:
    after: [ros2-galactic-extension]
    plugin: colcon
    source: https://github.com/Nanashi1Kuro/Robosim.git
    source-branch: galactic
    source-subdir: turtlebot3_simulations, like_a_rumba_robot
    stage-packages: [ros-galactic-ros2launch]
    # Define the ROS 2 environement variable necessary for install and build time
    build-environment:
    - ROS_VERSION: '2'
    - ROS_DISTRO: galactic

apps:
  ros2-move:
    command: opt/ros/galactic/bin/ros2 launch like_a_rumba_robot runpy.launch.py
    plugs: [network, network-bind]
    command-chain: [snap/command-chain/ros2-launch]
    environment:
      PYTHONPATH: $SNAP/opt/ros/galactic/lib/python3.8/site-packages:$SNAP/usr/lib/python3/dist-packages:${PYTHONPATH}
      ROS_DISTRO: galactic
      ROS_VERSION: '2'
